<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.choogoomoneyna.choogoomoneyna_be.ranking.mapper.RankingUserMapper">

    <!-- ResultMap: DB 결과를 RankingUserVO에 매핑 -->
    <resultMap id="RankingUserResultMap" type="com.choogoomoneyna.choogoomoneyna_be.ranking.vo.RankingUserVO">
        <result property="userId" column="user_id" />
        <result property="nickname" column="nickname" />
        <result property="ranking" column="ranking" />
        <result property="score" column="score" />
    </resultMap>

    <!-- 전체 랭킹 가져오기 (RankingUserVO 반환용) -->
    <select id="getAllRankingUser" resultMap="RankingUserResultMap">
        SELECT
            r.user_id AS user_id,
            u.nickname AS nickname,
            r.current_ranking AS ranking,
            s.score_value AS score
        FROM rankings r
                 LEFT JOIN users u ON r.user_id = u.user_id
                 LEFT JOIN scores s ON r.user_id = s.user_id
    </select>

    <!-- 인당 가장 최근 것만 가져오기 -->
    <select id="findTop50LatestRankingUserPerUser" resultMap="RankingUserResultMap">
        SELECT r.user_id AS user_id,
               u.nickname AS nickname,
               r.current_ranking AS ranking,
               s.score_value AS score
        FROM rankings r
                 INNER JOIN (
            SELECT user_id, MAX(update_date) AS max_update
            FROM rankings
            GROUP BY user_id
        ) latest ON r.user_id = latest.user_id AND r.update_date = latest.max_update
                 LEFT JOIN users u ON r.user_id = u.user_id
                 LEFT JOIN scores s ON r.user_id = s.user_id
        ORDER BY r.current_ranking ASC
        LIMIT 50
    </select>

    <select id="findTop3BySecondLatestRankingByRegDate" resultType="com.choogoomoneyna.choogoomoneyna_be.ranking.vo.RankingUserVO">
      <![CDATA[
        WITH second_latest AS (
            SELECT MAX(reg_date) AS reg_date
                FROM rankings
                WHERE reg_date < (
                    SELECT MAX(reg_date) FROM rankings
                )
            )
            SELECT r.user_id AS user_id,
                   u.nickname AS nickname,
                   r.current_ranking AS ranking,
                   s.score_value AS score
            FROM rankings r
                JOIN second_latest sl ON r.reg_date = sl.reg_date
                LEFT JOIN users u ON r.user_id = u.user_id
                LEFT JOIN scores s ON r.user_id = s.user_id
            ORDER BY r.current_ranking ASC
            LIMIT 3
        ]]>
</select>


</mapper>
