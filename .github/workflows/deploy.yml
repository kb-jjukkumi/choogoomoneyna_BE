name: Deploy to EC2 with Docker

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build WAR with Gradle
        run: ./gradlew clean build -x test

      - name: Check Jakarta Servlet dependency
        run: ./gradlew dependencies --configuration runtimeClasspath | grep jakarta.servlet || echo "No jakarta.servlet dependency found"

      - name: List build/libs content
        run: ls -l build/libs/

      - name: Check current directory
        run: pwd

      - name: Build Docker image
        run: docker build -t myapp:latest .

      - name: Save Docker image to tar
        run: docker save myapp:latest > myapp.tar

      - name: Copy image to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "myapp.tar"
          target: "~/"

      - name: SSH into EC2 and deploy
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo docker load < myapp.tar
            sudo docker stop myapp || true
            sudo docker rm myapp || true
            # --env 옵션을 사용하여 모든 환경 변수를 컨테이너에 전달합니다.
            sudo docker run -d --name myapp -p 80:8080 \
            --env CODEF_CLIENT_ID=${{ secrets.CODEF_CLIENT_ID }} \
            --env CODEF_CLIENT_SECRET=${{ secrets.CODEF_CLIENT_SECRET }} \
            --env CODEF_RSA_PUBLIC_KEY=${{ secrets.CODEF_RSA_PUBLIC_KEY }} \
            --env SPRING_DATASOURCE_DRIVER_CLASS_NAME=${{ secrets.SPRING_DATASOURCE_DRIVER_CLASS_NAME }} \
            --env SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL }} \
            --env SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }} \
            --env SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }} \
            --env SPRING_MAIL_HOST=${{ secrets.SPRING_MAIL_HOST }} \
            --env SPRING_MAIL_PORT=${{ secrets.SPRING_MAIL_PORT }} \
            --env SPRING_MAIL_USERNAME=${{ secrets.SPRING_MAIL_USERNAME }} \
            --env SPRING_MAIL_PASSWORD=${{ secrets.SPRING_MAIL_PASSWORD }} \
            --env JWT_SECRET=${{ secrets.JWT_SECRET }} \
            --env JWT_ACCESS_EXPIRATION=${{ secrets.JWT_ACCESS_EXPIRATION }} \
            --env JWT_REFRESH_EXPIRATION=${{ secrets.JWT_REFRESH_EXPIRATION }} \
            --env KAKAO_CLIENT_ID=${{ secrets.KAKAO_CLIENT_ID }} \
            --env KAKAO_REDIRECT_URI=${{ secrets.KAKAO_REDIRECT_URI }} \
            --env KAKAO_CLIENT_SECRET=${{ secrets.KAKAO_CLIENT_SECRET }} \
            --env KAKAO_AUTH_URI=${{ secrets.KAKAO_AUTH_URI }} \
            --env KAKAO_TOKEN_URI=${{ secrets.KAKAO_TOKEN_URI }} \
            --env KAKAO_USER_INFO_URI=${{ secrets.KAKAO_USER_INFO_URI }} \
            --env KAKAO_UNLINK_URI=${{ secrets.KAKAO_UNLINK_URI }} \
            --env OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} \
            --env OPENAI_MODEL=${{ secrets.OPENAI_MODEL }} \
            --env OPENAI_API_URL=${{ secrets.OPENAI_API_URL }} \
            myapp:latest